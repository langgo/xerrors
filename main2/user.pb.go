// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User2 struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                *any.Any `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User2) Reset()         { *m = User2{} }
func (m *User2) String() string { return proto.CompactTextString(m) }
func (*User2) ProtoMessage()    {}
func (*User2) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *User2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User2.Unmarshal(m, b)
}
func (m *User2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User2.Marshal(b, m, deterministic)
}
func (m *User2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User2.Merge(m, src)
}
func (m *User2) XXX_Size() int {
	return xxx_messageInfo_User2.Size(m)
}
func (m *User2) XXX_DiscardUnknown() {
	xxx_messageInfo_User2.DiscardUnknown(m)
}

var xxx_messageInfo_User2 proto.InternalMessageInfo

func (m *User2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User2) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

// Wrapper message for `int32`.
//
// The JSON representation for `Int32Value` is JSON number.
type Int32Value2 struct {
	// The int32 value.
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int32Value2) Reset()         { *m = Int32Value2{} }
func (m *Int32Value2) String() string { return proto.CompactTextString(m) }
func (*Int32Value2) ProtoMessage()    {}
func (*Int32Value2) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *Int32Value2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int32Value2.Unmarshal(m, b)
}
func (m *Int32Value2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int32Value2.Marshal(b, m, deterministic)
}
func (m *Int32Value2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int32Value2.Merge(m, src)
}
func (m *Int32Value2) XXX_Size() int {
	return xxx_messageInfo_Int32Value2.Size(m)
}
func (m *Int32Value2) XXX_DiscardUnknown() {
	xxx_messageInfo_Int32Value2.DiscardUnknown(m)
}

var xxx_messageInfo_Int32Value2 proto.InternalMessageInfo

func (m *Int32Value2) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*User2)(nil), "main.User2")
	proto.RegisterType((*Int32Value2)(nil), "main.Int32Value2")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x93, 0x92, 0x4c, 0xcf,
	0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x25, 0x95, 0xa6, 0xe9, 0x27, 0xe6, 0x55, 0x42, 0x14,
	0x28, 0xb9, 0x73, 0xb1, 0x86, 0x16, 0xa7, 0x16, 0x19, 0x09, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6,
	0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x5a, 0x5c, 0xac, 0x65, 0x89,
	0x39, 0xa5, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x22, 0x7a, 0x10, 0x73, 0xf4, 0x60,
	0xe6, 0xe8, 0x39, 0xe6, 0x55, 0x06, 0x41, 0x94, 0x28, 0x29, 0x73, 0x71, 0x7b, 0xe6, 0x95, 0x18,
	0x1b, 0x85, 0x81, 0x78, 0x46, 0x42, 0x22, 0x30, 0xad, 0x20, 0xf3, 0x58, 0xa1, 0x8a, 0x92, 0xd8,
	0xc0, 0x3a, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xab, 0xa8, 0xd3, 0x72, 0xa3, 0x00, 0x00,
	0x00,
}
